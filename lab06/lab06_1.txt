https://developers.google.com/machine-learning/problem-framing/try-it/framing-exercise

Lab06
Ziqi Chen, Joyce Chew, Elizabeth Koning

Exercise 1:
We want the machine learned model to: identify Gmail emails that are important to users

Exercise 2:
Our ideal outcome is: to identify and label emails that warrant user's time, attention, and/or action.

Exercise 3:
Success Metrics: If the emails labeled as important by the model are indeed important, success metrics will 
include: user reading the email soon, user replying to the email, the amount of time user spends in/interacting with the email.	


Key results for the success metrics: 
	of the emails that the user read before others (given read priority to), the model marks at least 70% of them as important

	of the emails that the user interacts with significantly (composing a reply, clicking a link, or downloading an attachment, etc), the model marks at least 70% of them as important

	the user reads 95% of the labeled emails before they read other unlabeled ones.

	the user interacts more significantly with 95% of the labeled emails than they do with unlabeled emails.


ML model is deemed a failure if:
	The labeled emails receive no read priority / no greater amount of interaction than the unlabeled emails. This would mean the ML model failed to distinguish the real important ones.


Exercise 4:
	The output from ML will be a list of labels that indicate which emails are important.

	The output will be defined as a label resulting from a computed probability of the email being important by the model. If the probability is greater than 0.90, the label will be created. 

Exercise 5:
	The output from the ML model will be immediately made as new emails arrive (after the model trains on large batch of email samples, which will require the interaction time and respond latency to first be recorded).

	The outcome will be presented as a label for each incoming email.

Exercise 6: 
	If we didn't use ML, we would employ a set of heuristics that are good indicators an email is important: for example, check if the email contains an attachment or hyperlinks, if any word is bolded or underlined, if the body contains anything that looks like a time or contact information, as well as the presence of words including "looking forward to your response", "please see/read..", and others that indicate a sense of urgency.

Exercise 7a: Binary classification, which predicts whether an email is important or not.

Exercise 7b: Our problem is already labeled as binary classification, but it can also be restated as unidimensional regression of the probability being important.

Exercise 8: 
Each row represents one email, and inputs are data points abstracted.
Input1: a boolean variable indicating the presence of a specific date/time
Input2: boolean variable indicating the presence of a contact info, such as a phone number or an email address
Input3: the subject line
...
Output: a boolean variable indicating whether email is important

Exercise 9:
The inputs are gathered by the time the email first arrives. Once the input is transformed and fed into the model, it should take a resonably small amount of time to produce the output label.

Exercise 10: I think the subject line input should be the easiest to obtain but harder to transform and feed into the model. On the other hand, the boolean indicators for a specific time or contact info that is mentioned requires more steps, including user a scanner to parse the entire body. But once obtained, it is easy to be transformed into a boolean variable. As the model sophisticates, we can add more inputs.